#!/usr/bin/env zsh

echo "-- Starting yabai..."
# Print also to stderr so it is easier to track in error file
echo "-- Starting yabai..." 1>&2
# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
sudo /opt/homebrew/bin/yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# global settings
yabai -m config debug_output                 on
yabai -m config mouse_follows_focus          on
# Can be autofocus, autoraise, off
yabai -m config focus_follows_mouse          off
yabai -m config window_origin_display        default
# Window placement can be first_child or second_child. First option makes new windows be placed on the left, while the second option
# places them on the right (top/ bottom for horizontal layout)
yabai -m config window_placement             second_child
yabai -m config window_topmost               on
# Enable shadows only for floating windows
yabai -m config window_shadow                float
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config window_border                off
yabai -m config window_border_width          1
yabai -m config active_window_border_color   0xff775759
yabai -m config normal_window_border_color   0xff555555
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.50
# Balance the window tree upon change, so that all windows occupy the same area.
yabai -m config auto_balance                 on
# Keyboard modifier used for moving and resizing windows.
yabai -m config mouse_modifier               ctrl
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
# Action performed when a bsp-managed window is dropped in the center of some other bsp-managed window.
yabai -m config mouse_drop_action            swap

# general space settings
yabai -m config layout                       bsp
#yabai -m config top_padding                  12
#yabai -m config bottom_padding               12
#yabai -m config left_padding                 12
#yabai -m config right_padding                12
yabai -m config window_gap                    3

### Space labels ###
yabai -m space 1 --label "browser-dev"
yabai -m space 2 --label "browser-pers"
yabai -m space 3 --label "term"
yabai -m space 4 --label "intellij"
yabai -m space 5 --label "slack"
yabai -m space 6 --label "media"
yabai -m space 7 --label "zoom"
yabai -m space 8 --label "calendar"
yabai -m space 9 --label "extra"
yabai -m space 10 --label "extra2"

### Spaces setup ###
# Be careful with this, the rule should always match ONLY the window we want moved.
# else anytime any dialog of the app matches, focus will move to that screen along
# with the dialog.
# If ^ is present, follow focus.
yabai -m rule --add app="^Slack$"                                       space=^"slack"

yabai -m rule --add app="^Spotify$"                                     space=^"media"

yabai -m rule --add app="^zoom.us$" title="^Zoom Meeting$"              space=^"zoom"

yabai -m rule --add app="^Finder$"                                      space=^"extra"
yabai -m rule --add app="^Calendar$"                                    space=^"calendar"

yabai -m rule --add app="^Microsoft Teams$" title="Microsoft Teams$"    space=^"slack"
# Matches the popup for signin
yabai -m rule --add app="^Microsoft Teams$" title="^$"                  space="extra2"

yabai -m rule --add app="^Microsoft Outlook$" title="^Inbox "           space=^"extra"
# Matches the popup for signin
yabai -m rule --add app="^Microsoft Outlook$" title="^$"                space="extra2"
yabai -m rule --add app="^Activity Monitor$"                            space=^"extra2"

### RULES ###
# Mac
yabai -m rule --add app="^System Preferences$" sticky=on layer=above manage=off
yabai -m rule --add title="^About This Mac$" manage=off
yabai -m rule --add app="^About This Mac$" manage=off

# Software
yabai -m rule --add app="^choose$" sticky=on layer=above manage=off
yabai -m rule --add app="^GlobalProtect$" title="^GlobalProtect Settings$" sticky=on layer=above manage=off
yabai -m rule --add app="^Calculator$" sticky=on layer=above manage=off
yabai -m rule --add app="^zoom.us$" manage=off
yabai -m rule --add app="^JetBrains Toolbox$" sticky=on layer=above manage=off border=off
jetbrain_apps="^(IntelliJ IDEA|WebStorm|PyCharm|CLion|GoLand)$"
yabai -m rule --add app="${jetbrain_apps}" title="^(Project Structure|Plugins|Run/Debug Configurations|Delete|Tip of the Day|Preferences|Push Commits|Rename|New Mapping)$" sticky=off layer=above manage=off
yabai -m rule --add app="^1Password$" sticky=on layer=above


# SIGNALS
# This makes windows with weird size float instead of trying to tile them.
yabai -m signal --add event=window_created action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq -e ".\"can-resize\" == false and .\"is-floating\" == false " && yabai -m window $YABAI_WINDOW_ID --toggle float'

echo "-- Yabai configuration loaded..\n"
# Print also to stderr so it is easier to track in error file
echo "-- Yabai configuration loaded..\n" 1>&2
